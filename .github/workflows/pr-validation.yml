name: tests validation

# only run on pull requests to master or development branches
# and only when actual library or lib version changes occur
on:
  pull_request:
    branches: [ master, development ]
    # paths:
      # - 'J789*/**' # at least one modified file matches configured path
      # - 'version.json' # updating Nerdbank.GitVersioning should trigger also

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet-version: [ '5.0.x' ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      # checkout files
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv works
      # setup dotnet core versions
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: dotnet restore
        run: dotnet restore
      - name: dotnet build
        run: dotnet build --configuration Release --no-restore
      - name: dotnet test
        run: dotnet test --configuration Release --no-restore --verbosity normal --logger trx --collect:"XPlat Code Coverage" --results-directory ./coverage
      - name: merge code coverage reports
        if: matrix.os == 'ubuntu-latest'
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:coverage/**/coverage.cobertura.xml -targetdir:merge/codecoverage -reporttypes:'Cobertura'
      - name: copy coverage to predictable location
        if: matrix.os == 'ubuntu-latest' # only run during the ubuntu run
        run: cp merge/codecoverage/coverage.cobertura.xml coverage/coverage.cobertura.xml
      - name: code coverage summary report
        if: matrix.os == 'ubuntu-latest' # only run during the ubuntu run
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: coverage/coverage.cobertura.xml
          badge: true
          format: 'md'
          output: 'both'
      - name: add code coverage pr comment
        if: github.event_name == 'pull_request' && matrix.os == 'ubuntu-latest' # only run during the ubuntu run and pull request
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: code-coverage-results.md


