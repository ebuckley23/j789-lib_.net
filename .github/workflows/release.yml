name: package release

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master, development ]
    paths:
      - 'J789*/**' # at least one modified file matches configured path
      - 'version.json' # updating Nerdbank.GitVersioning should trigger also

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Disable the .NET logo
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  GITHUB_TOKEN: ${{ github.token }}
  GITHUB_REPO_OWNER: ${{ github.repository_owner }}
  NUPKG_ARTIFACT: nupkgs
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # checkout files
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # avoid shallow clone so nbgv works
      # setup dotnet core versions
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget
      - name: dotnet restore
        run: dotnet restore
      - name: dotnet build
        run: dotnet build --configuration Release --no-restore
      - name: dotnet pack
        run: dotnet pack -v normal -c Release --no-restore --include-symbols --include-source -p:SymbolPackageFormat=snupkg
      - name: upload nuget package artifacts
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.NUPKG_ARTIFACT }}
          path: "**/*.nupkg"
        continue-on-error: false
  # prerelease nuget packages
  prelease:
    if: github.event.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: download nuget artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.NUPKG_ARTIFACT }}
        continue-on-error: false
      - name: add github nuget source
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_REPO_OWNER }}/index.json --name github
      - name: push github nuget source
        run: dotnet nuget push "**/*.nupkg" --source github --api-key ${{ env.GITHUB_TOKEN }} --skip-duplicate
  # release nuget package
  release:
    if:  github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: download nuget artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.NUPKG_ARTIFACT }}
        continue-on-error: false
      - name: add github nuget source
        run: dotnet nuget add source https://nuget.pkg.github.com/${{ env.GITHUB_REPO_OWNER }}/index.json --name github
      - name: push github nuget source
        run: dotnet nuget push "**/*.nupkg" --source github --api-key ${{ env.GITHUB_TOKEN }} --skip-duplicate
  # generate documentation
  generate-docs:
    if: github.event.ref == 'refs/heads/master'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [release]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Setup DocFX
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install docfx
      - name: dotnet restore
        run: dotnet restore
      - name: docfx build
        working-directory: docfx_project
        run: docfx docfx.json
        continue-on-error: false
      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docfx_project/_site
          force_orphan: true
